-- A verifier for a simple version of FRI.

def codewordLength : N := 256N.

data F ~= Fin(270497897142230380135924736767050121217).

def zero : F := to(F)(fin(0)).
def one : F := to(F)(fin(1)).

def cardinality : N := 270497897142230380135924736767050121217N.

def generator : F := to(F)(fin(85408008396924667383611388730472331217)).

def toN : F -> N
  := \x : F => cast(from(F)(x)).

def add : F -> F -> F -> Prop
  := \a : F => \b : F => \c : F
  => some d : N < cardinality,
     (toN(a) +N toN(b)) = (toN(c) +N (cardinality *N d)).

def mul : F -> F -> F -> Prop
  := \a : F => \b : F => \c : F
  => some d : N < cardinality,
     (toN(a) *N toN(b)) = (toN(c) +N (cardinality *N d)).

def negate : F -> F -> Prop
  := \a : F => \b : F
  => add(a, b, zero).

def combine1 : (F * F) -> (F * F) -> Prop
  := \x : (F * F) => \y : (F * F)
  => some negX2 : F,
     negate(pi2(x), negX2)
   & add(pi1(x), pi2(x), pi1(y))
   & add(pi1(x), negX2, pi2(y)).

def combine : F -> (F * F) -> (F * F) -> Prop
  := \omega : F => \x : (F * F) => \y : (F * F)
  => some x2Omega : F, some negX2Omega : F,
     mul(omega, pi2(x), x2Omega)
   & negate(x2Omega, negX2Omega)
   & add(pi1(x), x2Omega, pi1(y))
   & add(pi1(x), negX2Omega, pi2(y)).

def fft2 : (Fin(2) -> F) -> (Fin(2) -> F) -> Prop
  := \xs : Fin(2) -> F => \ys : Fin(2) -> F
  => combine1((xs(fin(0)), xs(fin(1))), (ys(fin(0)), ys(fin(1)))).

def fft4 : (Fin(4) -> F) -> (Fin(4) -> F) -> Prop
  := \xs : Fin(4) -> F => \ys : Fin(4) -> F
  => let omega : F := to(F)(fin(259052015163170058651980223774986375587));
     some ys0 : Fin(2) ->^2 F,
     some ys1 : Fin(2) ->^2 F,
     let xs0 : Fin(2) -> F := \i : Fin(2) => xs(cast(2N *N cast(i)));
     let xs1 : Fin(2) -> F := \i : Fin(2) => xs(cast((2N *N cast(i)) +N 1N));
     fft2(xs0, ys0) & fft2(xs1, ys1)
   & combine1((ys0(fin(0)), ys1(fin(0))), (ys(fin(0)), ys(fin(2))))
   & combine(omega, (ys0(fin(1)), ys1(fin(1))), (ys(fin(1)), ys(fin(3)))).

def fft8 : (Fin(8) -> F) -> (Fin(8) -> F) -> Prop
  := \xs : Fin(8) -> F => \ys : Fin(8) -> F
  => let omega : F := to(F)(fin(131076302407280330469229082343774091404));
     let omega2 : F := to(F)(fin(259052015163170058651980223774986375587));
     let omega3 : F := to(F)(fin(94118632892422173191291920064315934488));
     some ys0 : Fin(4) ->^4 F,
     some ys1 : Fin(4) ->^4 F,
     let xs0 : Fin(4) -> F := \i : Fin(4) => xs(cast(2N *N cast(i)));
     let xs1 : Fin(4) -> F := \i : Fin(4) => xs(cast((2N *N cast(i)) +N 1N));
     fft4(xs0, ys0) & fft4(xs1, ys1)
   & combine1((ys0(fin(0)), ys1(fin(0))), (ys(fin(0)), ys(fin(4))))
   & combine(omega, (ys0(fin(1)), ys1(fin(1))), (ys(fin(1)), ys(fin(5))))
   & combine(omega2, (ys0(fin(2)), ys1(fin(2))), (ys(fin(2)), ys(fin(6))))
   & combine(omega3, (ys0(fin(3)), ys1(fin(3))), (ys(fin(3)), ys(fin(7)))).

def fft16 : (Fin(16) -> F) -> (Fin(16) -> F) -> Prop
  := \xs : Fin(16) -> F => \ys : Fin(16) -> F
  => let omega : F := to(F)(fin(22186728119017901039385635608201850931));
     let omega2 : F := to(F)(fin(131076302407280330469229082343774091404));
     let omega3 : F := to(F)(fin(73231901677283077325882091713770153990));
     let omega4 : F := to(F)(fin(259052015163170058651980223774986375587));
     let omega5 : F := to(F)(fin(266437655688779403589114768359918648781));
     let omega6 : F := to(F)(fin(94118632892422173191291920064315934488));
     let omega7 : F := to(F)(fin(196366951967922674545239204167809605584));
     some ys0 : Fin(8) ->^8 F,
     some ys1 : Fin(8) ->^8 F,
     let xs0 : Fin(8) -> F := \i : Fin(8) => xs(cast(2N *N cast(i)));
     let xs1 : Fin(8) -> F := \i : Fin(8) => xs(cast((2N *N cast(i)) +N 1N));
     fft8(xs0, ys0) & fft8(xs1, ys1)
   & combine1((ys0(fin(0)), ys1(fin(0))), (ys(fin(0)), ys(fin(8))))
   & combine(omega, (ys0(fin(1)), ys1(fin(1))), (ys(fin(1)), ys(fin(9))))
   & combine(omega2, (ys0(fin(2)), ys1(fin(2))), (ys(fin(2)), ys(fin(10))))
   & combine(omega3, (ys0(fin(3)), ys1(fin(3))), (ys(fin(3)), ys(fin(11))))
   & combine(omega4, (ys0(fin(4)), ys1(fin(4))), (ys(fin(4)), ys(fin(12))))
   & combine(omega5, (ys0(fin(5)), ys1(fin(5))), (ys(fin(5)), ys(fin(13))))
   & combine(omega6, (ys0(fin(6)), ys1(fin(6))), (ys(fin(6)), ys(fin(14))))
   & combine(omega7, (ys0(fin(7)), ys1(fin(7))), (ys(fin(7)), ys(fin(15)))).

def fft32 : (Fin(32) -> F) -> (Fin(32) -> F) -> Prop
  := \xs : Fin(32) -> F => \ys : Fin(32) -> F
  => let omega1 : F := to(F)(fin(16698199167658661640320272194027702370));
     let omega2 : F := to(F)(fin(22186728119017901039385635608201850931));
     let omega3 : F := to(F)(fin(34350062198098277421132970135534305821));
     let omega4 : F := to(F)(fin(131076302407280330469229082343774091404));
     let omega5 : F := to(F)(fin(107125704632455286753154574269440354274));
     let omega6 : F := to(F)(fin(73231901677283077325882091713770153990));
     let omega7 : F := to(F)(fin(90374378160636663023428487766167913148));
     let omega8 : F := to(F)(fin(259052015163170058651980223774986375587));
     let omega9 : F := to(F)(fin(162806147425635384733525067434736806136));
     let omega10 : F := to(F)(fin(266437655688779403589114768359918648781));
     let omega11 : F := to(F)(fin(144022985169312756131804347043517484647));
     let omega12 : F := to(F)(fin(94118632892422173191291920064315934488));
     let omega13 : F := to(F)(fin(90666895636146090046074637791036353677));
     let omega14 : F := to(F)(fin(196366951967922674545239204167809605584));
     let omega15 : F := to(F)(fin(227466907842111639850817356847064975718));
     some ys0 : Fin(16) ->^16 F,
     some ys1 : Fin(16) ->^16 F,
     let xs0 : Fin(16) -> F := \i : Fin(16) => xs(cast(2N *N cast(i)));
     let xs1 : Fin(16) -> F := \i : Fin(16) => xs(cast((2N *N cast(i)) +N 1N));
     fft16(xs0, ys) & fft16(xs1, ys1)
   & combine1((ys0(fin(0)), ys1(fin(0))), (ys(fin(0)), ys(fin(16))))
   & combine(omega1, (ys0(fin(1)), ys1(fin(1))), (ys(fin(1)), ys(fin(17))))
   & combine(omega2, (ys0(fin(2)), ys1(fin(2))), (ys(fin(2)), ys(fin(18))))
   & combine(omega3, (ys0(fin(3)), ys1(fin(3))), (ys(fin(3)), ys(fin(19))))
   & combine(omega4, (ys0(fin(4)), ys1(fin(4))), (ys(fin(4)), ys(fin(20))))
   & combine(omega5, (ys0(fin(5)), ys1(fin(5))), (ys(fin(5)), ys(fin(21))))
   & combine(omega6, (ys0(fin(6)), ys1(fin(6))), (ys(fin(6)), ys(fin(22))))
   & combine(omega7, (ys0(fin(7)), ys1(fin(7))), (ys(fin(7)), ys(fin(23))))
   & combine(omega8, (ys0(fin(8)), ys1(fin(8))), (ys(fin(8)), ys(fin(24))))
   & combine(omega9, (ys0(fin(9)), ys1(fin(9))), (ys(fin(9)), ys(fin(25))))
   & combine(omega10, (ys0(fin(10)), ys1(fin(10))), (ys(fin(10)), ys(fin(26))))
   & combine(omega11, (ys0(fin(11)), ys1(fin(11))), (ys(fin(11)), ys(fin(27))))
   & combine(omega12, (ys0(fin(12)), ys1(fin(12))), (ys(fin(12)), ys(fin(28))))
   & combine(omega13, (ys0(fin(13)), ys1(fin(13))), (ys(fin(13)), ys(fin(29))))
   & combine(omega14, (ys0(fin(14)), ys1(fin(14))), (ys(fin(14)), ys(fin(30))))
   & combine(omega15, (ys0(fin(15)), ys1(fin(15))), (ys(fin(15)), ys(fin(31)))).


def fft64 : (Fin(64) -> F) -> (Fin(64) -> F) -> Prop
  := \xs : Fin(64) -> F => \ys : Fin(64) -> F
  => let omega1 : F := to(F)(fin(59478736836296470922896375673044043947));
     let omega2 : F := to(F)(fin(16698199167658661640320272194027702370));
     let omega3 : F := to(F)(fin(230239576433093401532832293097799987081));
     let omega4 : F := to(F)(fin(22186728119017901039385635608201850931));
     let omega5 : F := to(F)(fin(66082323163859804339774168672220475012));
     let omega6 : F := to(F)(fin(34350062198098277421132970135534305821));
     let omega7 : F := to(F)(fin(53975102611463661700300295131436589811));
     let omega8 : F := to(F)(fin(131076302407280330469229082343774091404));
     let omega9 : F := to(F)(fin(181780365704469330345834104632378070880));
     let omega10 : F := to(F)(fin(107125704632455286753154574269440354274));
     let omega11 : F := to(F)(fin(175748425828701265334841538845137933816));
     let omega12 : F := to(F)(fin(73231901677283077325882091713770153990));
     let omega13 : F := to(F)(fin(88860983738059218942568320754437614996));
     let omega14 : F := to(F)(fin(90374378160636663023428487766167913148));
     let omega15 : F := to(F)(fin(98444187387640850276152309454388340014));
     let omega16 : F := to(F)(fin(259052015163170058651980223774986375587));
     let omega17 : F := to(F)(fin(100703521582087853386340341793494523820));
     let omega18 : F := to(F)(fin(162806147425635384733525067434736806136));
     let omega19 : F := to(F)(fin(137011298098866627214397059271234920884));
     let omega20 : F := to(F)(fin(266437655688779403589114768359918648781));
     let omega21 : F := to(F)(fin(167518099136818620742107111461969078554));
     let omega22 : F := to(F)(fin(144022985169312756131804347043517484647));
     let omega23 : F := to(F)(fin(173027906138811040234738490632352065247));
     let omega24 : F := to(F)(fin(94118632892422173191291920064315934488));
     let omega25 : F := to(F)(fin(266218309391531664192048397095017306631));
     let omega26 : F := to(F)(fin(90666895636146090046074637791036353677));
     let omega27 : F := to(F)(fin(160023194695147206377062539534574021330));
     let omega28 : F := to(F)(fin(196366951967922674545239204167809605584));
     let omega29 : F := to(F)(fin(209738890145307597667055477969839115273));
     let omega30 : F := to(F)(fin(227466907842111639850817356847064975718));
     let omega31 : F := to(F)(fin(126268713548946527012676081801390371621));
     some ys0 : Fin(32) ->^32 F,
     some ys1 : Fin(32) ->^32 F,
     let xs0 : Fin(32) -> F := \i : Fin(32) => xs(cast(2N *N cast(i)));
     let xs1 : Fin(32) -> F := \i : Fin(32) => xs(cast((2N *N cast(i)) +N 1N));
     fft32(xs0, ys) & fft32(xs1, ys1)
   & combine1((ys0(fin(0)), ys1(fin(0))), (ys(fin(0)), ys(fin(32))))
   & combine(omega1, (ys0(fin(1)), ys1(fin(1))), (ys(fin(1)), ys(fin(33))))
   & combine(omega2, (ys0(fin(2)), ys1(fin(2))), (ys(fin(2)), ys(fin(34))))
   & combine(omega3, (ys0(fin(3)), ys1(fin(3))), (ys(fin(3)), ys(fin(35))))
   & combine(omega4, (ys0(fin(4)), ys1(fin(4))), (ys(fin(4)), ys(fin(36))))
   & combine(omega5, (ys0(fin(5)), ys1(fin(5))), (ys(fin(5)), ys(fin(37))))
   & combine(omega6, (ys0(fin(6)), ys1(fin(6))), (ys(fin(6)), ys(fin(38))))
   & combine(omega7, (ys0(fin(7)), ys1(fin(7))), (ys(fin(7)), ys(fin(39))))
   & combine(omega8, (ys0(fin(8)), ys1(fin(8))), (ys(fin(8)), ys(fin(40))))
   & combine(omega9, (ys0(fin(9)), ys1(fin(9))), (ys(fin(9)), ys(fin(41))))
   & combine(omega10, (ys0(fin(10)), ys1(fin(10))), (ys(fin(10)), ys(fin(42))))
   & combine(omega11, (ys0(fin(11)), ys1(fin(11))), (ys(fin(11)), ys(fin(43))))
   & combine(omega12, (ys0(fin(12)), ys1(fin(12))), (ys(fin(12)), ys(fin(44))))
   & combine(omega13, (ys0(fin(13)), ys1(fin(13))), (ys(fin(13)), ys(fin(45))))
   & combine(omega14, (ys0(fin(14)), ys1(fin(14))), (ys(fin(14)), ys(fin(46))))
   & combine(omega15, (ys0(fin(15)), ys1(fin(15))), (ys(fin(15)), ys(fin(47))))
   & combine(omega16, (ys0(fin(16)), ys1(fin(16))), (ys(fin(16)), ys(fin(48))))
   & combine(omega17, (ys0(fin(17)), ys1(fin(17))), (ys(fin(17)), ys(fin(49))))
   & combine(omega18, (ys0(fin(18)), ys1(fin(18))), (ys(fin(18)), ys(fin(50))))
   & combine(omega19, (ys0(fin(19)), ys1(fin(19))), (ys(fin(19)), ys(fin(51))))
   & combine(omega20, (ys0(fin(20)), ys1(fin(20))), (ys(fin(20)), ys(fin(52))))
   & combine(omega21, (ys0(fin(21)), ys1(fin(21))), (ys(fin(21)), ys(fin(53))))
   & combine(omega22, (ys0(fin(22)), ys1(fin(22))), (ys(fin(22)), ys(fin(54))))
   & combine(omega23, (ys0(fin(23)), ys1(fin(23))), (ys(fin(23)), ys(fin(55))))
   & combine(omega24, (ys0(fin(24)), ys1(fin(24))), (ys(fin(24)), ys(fin(56))))
   & combine(omega25, (ys0(fin(25)), ys1(fin(25))), (ys(fin(25)), ys(fin(57))))
   & combine(omega26, (ys0(fin(26)), ys1(fin(26))), (ys(fin(26)), ys(fin(58))))
   & combine(omega27, (ys0(fin(27)), ys1(fin(27))), (ys(fin(27)), ys(fin(59))))
   & combine(omega28, (ys0(fin(28)), ys1(fin(28))), (ys(fin(28)), ys(fin(60))))
   & combine(omega29, (ys0(fin(29)), ys1(fin(29))), (ys(fin(29)), ys(fin(61))))
   & combine(omega30, (ys0(fin(30)), ys1(fin(30))), (ys(fin(30)), ys(fin(62))))
   & combine(omega31, (ys0(fin(31)), ys1(fin(31))), (ys(fin(31)), ys(fin(63)))).

def fft128 : (Fin(128) -> F) -> (Fin(128) -> F) -> Prop
  := \xs : Fin(128) -> F => \ys : Fin(128) -> F
  => let omega1 : F := to(F)(fin(65907963977709178563567092354521124432));
     let omega2 : F := to(F)(fin(59478736836296470922896375673044043947));
     let omega3 : F := to(F)(fin(10080743355633979073980820746207349976));
     let omega4 : F := to(F)(fin(16698199167658661640320272194027702370));
     let omega5 : F := to(F)(fin(155514080029925461915875765689528793011));
     let omega6 : F := to(F)(fin(230239576433093401532832293097799987081));
     let omega7 : F := to(F)(fin(194132420544040598451138094918501362788));
     let omega8 : F := to(F)(fin(22186728119017901039385635608201850931));
     let omega9 : F := to(F)(fin(165171464351728602222496071538917915759));
     let omega10 : F := to(F)(fin(66082323163859804339774168672220475012));
     let omega11 : F := to(F)(fin(52368989022523362401030890040631910589));
     let omega12 : F := to(F)(fin(34350062198098277421132970135534305821));
     let omega13 : F := to(F)(fin(125981173384658672605335060327246825341));
     let omega14 : F := to(F)(fin(53975102611463661700300295131436589811));
     let omega15 : F := to(F)(fin(45731804364596080071742990960990329708));
     let omega16 : F := to(F)(fin(131076302407280330469229082343774091404));
     let omega17 : F := to(F)(fin(646071126513514338479457116666093882));
     let omega18 : F := to(F)(fin(181780365704469330345834104632378070880));
     let omega19 : F := to(F)(fin(55611006669477530418094321149794867386));
     let omega20 : F := to(F)(fin(107125704632455286753154574269440354274));
     let omega21 : F := to(F)(fin(187135511082714768634880684591229128547));
     let omega22 : F := to(F)(fin(175748425828701265334841538845137933816));
     let omega23 : F := to(F)(fin(53496544804274307075856202076079293771));
     let omega24 : F := to(F)(fin(73231901677283077325882091713770153990));
     let omega25 : F := to(F)(fin(108347376047545789579368286899060029778));
     let omega26 : F := to(F)(fin(88860983738059218942568320754437614996));
     let omega27 : F := to(F)(fin(104476918710448136045822974773644103317));
     let omega28 : F := to(F)(fin(90374378160636663023428487766167913148));
     let omega29 : F := to(F)(fin(43929742161450112436869802623156599743));
     let omega30 : F := to(F)(fin(98444187387640850276152309454388340014));
     let omega31 : F := to(F)(fin(196492777263284737445172729740627419842));
     let omega32 : F := to(F)(fin(259052015163170058651980223774986375587));
     let omega33 : F := to(F)(fin(145258429125910453228712361680196389420));
     let omega34 : F := to(F)(fin(100703521582087853386340341793494523820));
     let omega35 : F := to(F)(fin(167990255399084614625398011033513433967));
     let omega36 : F := to(F)(fin(162806147425635384733525067434736806136));
     let omega37 : F := to(F)(fin(249804383098053691690433466673672256150));
     let omega38 : F := to(F)(fin(137011298098866627214397059271234920884));
     let omega39 : F := to(F)(fin(22109119444620255491656599370014894118));
     let omega40 : F := to(F)(fin(266437655688779403589114768359918648781));
     let omega41 : F := to(F)(fin(218884243067799520092859976286523983462));
     let omega42 : F := to(F)(fin(167518099136818620742107111461969078554));
     let omega43 : F := to(F)(fin(81221284648176836047816392199558901810));
     let omega44 : F := to(F)(fin(144022985169312756131804347043517484647));
     let omega45 : F := to(F)(fin(127508946414583913393496651359134117178));
     let omega46 : F := to(F)(fin(173027906138811040234738490632352065247));
     let omega47 : F := to(F)(fin(147515479292872070656581089263671104447));
     let omega48 : F := to(F)(fin(94118632892422173191291920064315934488));
     let omega49 : F := to(F)(fin(258631907013871381269861234031607317568));
     let omega50 : F := to(F)(fin(266218309391531664192048397095017306631));
     let omega51 : F := to(F)(fin(105927649836782660661359579301354132376));
     let omega52 : F := to(F)(fin(90666895636146090046074637791036353677));
     let omega53 : F := to(F)(fin(2956470401820075415746174703645418480));
     let omega54 : F := to(F)(fin(160023194695147206377062539534574021330));
     let omega55 : F := to(F)(fin(217783932944107721720455816777548457284));
     let omega56 : F := to(F)(fin(196366951967922674545239204167809605584));
     let omega57 : F := to(F)(fin(198299637922638238992009055366939691179));
     let omega58 : F := to(F)(fin(209738890145307597667055477969839115273));
     let omega59 : F := to(F)(fin(79710547658162008818621698923701135801));
     let omega60 : F := to(F)(fin(227466907842111639850817356847064975718));
     let omega61 : F := to(F)(fin(204262520294779538392537716498324354516));
     let omega62 : F := to(F)(fin(126268713548946527012676081801390371621));
     let omega63 : F := to(F)(fin(256566110679969874514434967353409990301)); 
     some ys0 : Fin(64) ->^64 F,
     some ys1 : Fin(64) ->^64 F,
     let xs0 : Fin(64) -> F := \i : Fin(64) => xs(cast(2N *N cast(i)));
     let xs1 : Fin(64) -> F := \i : Fin(64) => xs(cast((2N *N cast(i)) +N 1N));
     fft64(xs0, ys0) & fft64(xs1, ys1)
   & combine1((ys0(fin(0)), ys1(fin(0))), (ys(fin(0)), ys(fin(64))))
   & combine(omega1, (ys0(fin(1)), ys1(fin(1))), (ys(fin(1)), ys(fin(65))))
   & combine(omega2, (ys0(fin(2)), ys1(fin(2))), (ys(fin(2)), ys(fin(66))))
   & combine(omega3, (ys0(fin(3)), ys1(fin(3))), (ys(fin(3)), ys(fin(67))))
   & combine(omega4, (ys0(fin(4)), ys1(fin(4))), (ys(fin(4)), ys(fin(68))))
   & combine(omega5, (ys0(fin(5)), ys1(fin(5))), (ys(fin(5)), ys(fin(69))))
   & combine(omega6, (ys0(fin(6)), ys1(fin(6))), (ys(fin(6)), ys(fin(70))))
   & combine(omega7, (ys0(fin(7)), ys1(fin(7))), (ys(fin(7)), ys(fin(71))))
   & combine(omega8, (ys0(fin(8)), ys1(fin(8))), (ys(fin(8)), ys(fin(72))))
   & combine(omega9, (ys0(fin(9)), ys1(fin(9))), (ys(fin(9)), ys(fin(73))))
   & combine(omega10, (ys0(fin(10)), ys1(fin(10))), (ys(fin(10)), ys(fin(74))))
   & combine(omega11, (ys0(fin(11)), ys1(fin(11))), (ys(fin(11)), ys(fin(75))))
   & combine(omega12, (ys0(fin(12)), ys1(fin(12))), (ys(fin(12)), ys(fin(76))))
   & combine(omega13, (ys0(fin(13)), ys1(fin(13))), (ys(fin(13)), ys(fin(77))))
   & combine(omega14, (ys0(fin(14)), ys1(fin(14))), (ys(fin(14)), ys(fin(78))))
   & combine(omega15, (ys0(fin(15)), ys1(fin(15))), (ys(fin(15)), ys(fin(79))))
   & combine(omega16, (ys0(fin(16)), ys1(fin(16))), (ys(fin(16)), ys(fin(80))))
   & combine(omega17, (ys0(fin(17)), ys1(fin(17))), (ys(fin(17)), ys(fin(81))))
   & combine(omega18, (ys0(fin(18)), ys1(fin(18))), (ys(fin(18)), ys(fin(82))))
   & combine(omega19, (ys0(fin(19)), ys1(fin(19))), (ys(fin(19)), ys(fin(83))))
   & combine(omega20, (ys0(fin(20)), ys1(fin(20))), (ys(fin(20)), ys(fin(84))))
   & combine(omega21, (ys0(fin(21)), ys1(fin(21))), (ys(fin(21)), ys(fin(85))))
   & combine(omega22, (ys0(fin(22)), ys1(fin(22))), (ys(fin(22)), ys(fin(86))))
   & combine(omega23, (ys0(fin(23)), ys1(fin(23))), (ys(fin(23)), ys(fin(87))))
   & combine(omega24, (ys0(fin(24)), ys1(fin(24))), (ys(fin(24)), ys(fin(88))))
   & combine(omega25, (ys0(fin(25)), ys1(fin(25))), (ys(fin(25)), ys(fin(89))))
   & combine(omega26, (ys0(fin(26)), ys1(fin(26))), (ys(fin(26)), ys(fin(90))))
   & combine(omega27, (ys0(fin(27)), ys1(fin(27))), (ys(fin(27)), ys(fin(91))))
   & combine(omega28, (ys0(fin(28)), ys1(fin(28))), (ys(fin(28)), ys(fin(92))))
   & combine(omega29, (ys0(fin(29)), ys1(fin(29))), (ys(fin(29)), ys(fin(93))))
   & combine(omega30, (ys0(fin(30)), ys1(fin(30))), (ys(fin(30)), ys(fin(94))))
   & combine(omega31, (ys0(fin(31)), ys1(fin(31))), (ys(fin(31)), ys(fin(95))))
   & combine(omega32, (ys0(fin(32)), ys1(fin(32))), (ys(fin(32)), ys(fin(96))))
   & combine(omega33, (ys0(fin(33)), ys1(fin(33))), (ys(fin(33)), ys(fin(97))))
   & combine(omega34, (ys0(fin(34)), ys1(fin(34))), (ys(fin(34)), ys(fin(98))))
   & combine(omega35, (ys0(fin(35)), ys1(fin(35))), (ys(fin(35)), ys(fin(99))))
   & combine(omega36, (ys0(fin(36)), ys1(fin(36))), (ys(fin(36)), ys(fin(100))))
   & combine(omega37, (ys0(fin(37)), ys1(fin(37))), (ys(fin(37)), ys(fin(101))))
   & combine(omega38, (ys0(fin(38)), ys1(fin(38))), (ys(fin(38)), ys(fin(102))))
   & combine(omega39, (ys0(fin(39)), ys1(fin(39))), (ys(fin(39)), ys(fin(103))))
   & combine(omega40, (ys0(fin(40)), ys1(fin(40))), (ys(fin(40)), ys(fin(104))))
   & combine(omega41, (ys0(fin(41)), ys1(fin(41))), (ys(fin(41)), ys(fin(105))))
   & combine(omega42, (ys0(fin(42)), ys1(fin(42))), (ys(fin(42)), ys(fin(106))))
   & combine(omega43, (ys0(fin(43)), ys1(fin(43))), (ys(fin(43)), ys(fin(107))))
   & combine(omega44, (ys0(fin(44)), ys1(fin(44))), (ys(fin(44)), ys(fin(108))))
   & combine(omega45, (ys0(fin(45)), ys1(fin(45))), (ys(fin(45)), ys(fin(109))))
   & combine(omega46, (ys0(fin(46)), ys1(fin(46))), (ys(fin(46)), ys(fin(110))))
   & combine(omega47, (ys0(fin(47)), ys1(fin(47))), (ys(fin(47)), ys(fin(111))))
   & combine(omega48, (ys0(fin(48)), ys1(fin(48))), (ys(fin(48)), ys(fin(112))))
   & combine(omega49, (ys0(fin(49)), ys1(fin(49))), (ys(fin(49)), ys(fin(113))))
   & combine(omega50, (ys0(fin(50)), ys1(fin(50))), (ys(fin(50)), ys(fin(114))))
   & combine(omega51, (ys0(fin(51)), ys1(fin(51))), (ys(fin(51)), ys(fin(115))))
   & combine(omega52, (ys0(fin(52)), ys1(fin(52))), (ys(fin(52)), ys(fin(116))))
   & combine(omega53, (ys0(fin(53)), ys1(fin(53))), (ys(fin(53)), ys(fin(117))))
   & combine(omega54, (ys0(fin(54)), ys1(fin(54))), (ys(fin(54)), ys(fin(118))))
   & combine(omega55, (ys0(fin(55)), ys1(fin(55))), (ys(fin(55)), ys(fin(119))))
   & combine(omega56, (ys0(fin(56)), ys1(fin(56))), (ys(fin(56)), ys(fin(120))))
   & combine(omega57, (ys0(fin(57)), ys1(fin(57))), (ys(fin(57)), ys(fin(121))))
   & combine(omega58, (ys0(fin(58)), ys1(fin(58))), (ys(fin(58)), ys(fin(122))))
   & combine(omega59, (ys0(fin(59)), ys1(fin(59))), (ys(fin(59)), ys(fin(123))))
   & combine(omega60, (ys0(fin(60)), ys1(fin(60))), (ys(fin(60)), ys(fin(124))))
   & combine(omega61, (ys0(fin(61)), ys1(fin(61))), (ys(fin(61)), ys(fin(125))))
   & combine(omega62, (ys0(fin(62)), ys1(fin(62))), (ys(fin(62)), ys(fin(126))))
   & combine(omega63, (ys0(fin(63)), ys1(fin(63))), (ys(fin(63)), ys(fin(127)))).

